# ============================================
# ConvergeAI Backend Docker Compose
# ============================================
# Local development environment setup

version: '3.8'

services:
  # ============================================
  # MySQL Database
  # ============================================
  mysql:
    image: mysql:8.0
    container_name: convergeai-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-convergeai_db}
      MYSQL_USER: ${DB_USER:-convergeai_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-convergeai_password}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema:/docker-entrypoint-initdb.d:ro
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=200
      --innodb_buffer_pool_size=1G
    networks:
      - convergeai-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-rootpassword}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # Redis Cache
  # ============================================
  redis:
    image: redis:7-alpine
    container_name: convergeai-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    networks:
      - convergeai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # FastAPI Backend
  # ============================================
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: convergeai-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENVIRONMENT=development
    ports:
      - "${PORT:-8000}:8000"
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - convergeai-network
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # ============================================
  # Celery Worker
  # ============================================
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: convergeai-celery-worker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - redis
      - mysql
    networks:
      - convergeai-network
    command: celery -A src.tasks.celery_app worker --loglevel=info

  # ============================================
  # Celery Beat (Scheduler)
  # ============================================
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: convergeai-celery-beat
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - redis
      - mysql
    networks:
      - convergeai-network
    command: celery -A src.tasks.celery_app beat --loglevel=info

  # ============================================
  # Flower (Celery Monitoring)
  # ============================================
  flower:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: convergeai-flower
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery-worker
    networks:
      - convergeai-network
    command: celery -A src.tasks.celery_app flower --port=5555

  # ============================================
  # Prometheus (Metrics)
  # ============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: convergeai-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - convergeai-network

  # ============================================
  # Grafana (Visualization)
  # ============================================
  grafana:
    image: grafana/grafana:latest
    container_name: convergeai-grafana
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./deployment/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - convergeai-network

# ============================================
# Networks
# ============================================
networks:
  convergeai-network:
    driver: bridge
    name: convergeai-network

# ============================================
# Volumes
# ============================================
volumes:
  mysql_data:
    name: convergeai-mysql-data
  redis_data:
    name: convergeai-redis-data
  prometheus_data:
    name: convergeai-prometheus-data
  grafana_data:
    name: convergeai-grafana-data

