# ============================================
# ConvergeAI Backend Project Configuration
# ============================================

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "convergeai-backend"
version = "1.0.0"
description = "ConvergeAI Multi-Agent Customer Service Platform Backend"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "ConvergeAI Team", email = "team@convergeai.com"}
]
keywords = ["ai", "chatbot", "customer-service", "langchain", "langgraph", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]

[project.urls]
Homepage = "https://github.com/convergeai/backend"
Documentation = "https://docs.convergeai.com"
Repository = "https://github.com/convergeai/backend"
Issues = "https://github.com/convergeai/backend/issues"

# ============================================
# Black Configuration
# ============================================
[tool.black]
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# ============================================
# isort Configuration
# ============================================
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*", "*/__pycache__/*", "*/venv/*"]

# ============================================
# Pytest Configuration
# ============================================
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-branch",
    "--asyncio-mode=auto",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "asyncio: Async tests",
]
asyncio_mode = "auto"

# ============================================
# Coverage Configuration
# ============================================
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/config/*",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# ============================================
# MyPy Configuration
# ============================================
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
strict_optional = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

# ============================================
# Pylint Configuration
# ============================================
[tool.pylint.main]
py-version = "3.12"
jobs = 0
limit-inference-results = 100
persistent = true
suggestion-mode = true

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0212",  # protected-access
]

[tool.pylint.format]
max-line-length = 100
indent-string = "    "

[tool.pylint.design]
max-args = 10
max-attributes = 15
max-bool-expr = 5
max-branches = 15
max-locals = 20
max-parents = 7
max-public-methods = 25
max-returns = 6
max-statements = 50
min-public-methods = 1

# ============================================
# Bandit Configuration (Security)
# ============================================
[tool.bandit]
exclude_dirs = [
    "/tests/",
    "/migrations/",
    "/venv/",
]
skips = ["B101", "B601"]

# ============================================
# Interrogate Configuration (Docstring Coverage)
# ============================================
[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
ignore-semiprivate = true
ignore-private = true
ignore-property-decorators = true
ignore-module = true
ignore-nested-functions = true
ignore-nested-classes = true
fail-under = 50
exclude = ["setup.py", "docs", "build", "tests", "migrations"]
verbose = 1
quiet = false
whitelist-regex = []
color = true

